diff -u netqmail-1.06/qmail-control.9 netqmail-1.06-new/qmail-control.9
--- netqmail-1.06/qmail-control.9	2020-01-16 05:39:21.545000010 +1100
+++ qmail-control.9	2020-01-16 21:27:19.913000017 +1100
@@ -71,7 +71,7 @@
 .I localiphost	\fIme	\fRqmail-smtpd
 .I locals	\fIme	\fRqmail-send
 .I morercpthosts	\fR(none)	\fRqmail-smtpd
-.I outgoingip	\fR0.0.0.0	\fRqmail-remote
+.I outgoingips	\fR(none)	\fRqmail-remote
 .I percenthack	\fR(none)	\fRqmail-send
 .I plusdomain	\fIme	\fRqmail-inject
 .I qmqpservers	\fR(none)	\fRqmail-qmqpc
diff -u netqmail-1.06/qmail-remote.8 netqmail-1.06-new/qmail-remote.8
--- netqmail-1.06/qmail-remote.8	2020-01-16 05:39:21.560000009 +1100
+++ qmail-remote.8	2020-01-16 21:27:19.916000010 +1100
@@ -250,12 +250,22 @@
 takes precedence over this file however).
 
 .TP 5
-.I outgoingip
-IP address to be used on outgoing connections.
-Default: system-defined.
-The value 
-.IR 0.0.0.0 
-is equivalent to the system default.
+.I outgoingips
+IP addresses to be used on outgoing connections.
+Each line has the form
+.IR fromdomain\fB:\fIlocalip ,
+without any extra spaces.
+If
+.I domain
+matches the domain part in
+.IR sender ,
+.B qmail-remote
+will bind to
+.IR localip 
+when connecting to 
+.IR host .
+If it matches, it will also set the HELO string to the domain part of
+.IR sender .
 .TP 5
 .I smtproutes
 Artificial SMTP routes.
diff -u netqmail-1.06/qmail-remote.c netqmail-1.06-new/qmail-remote.c
--- netqmail-1.06/qmail-remote.c	2020-01-16 05:39:21.563000009 +1100
+++ qmail-remote.c	2020-01-16 21:33:22.485999700 +1100
@@ -40,7 +40,9 @@
 static stralloc sauninit = {0};
 
 stralloc helohost = {0};
-stralloc outgoingip = {0};
+stralloc outdomain = {0};
+stralloc outgoingips = {0};
+struct constmap mapoutgoingips;
 stralloc routes = {0};
 struct constmap maproutes;
 stralloc host = {0};
@@ -59,7 +61,7 @@
 saa reciplist = {0};
 
 struct ip_address partner;
-struct ip_address outip;
+struct ip_address outgoingip;
 
 #ifdef TLS
 # include <sys/stat.h>
@@ -80,7 +82,7 @@
 ch = sa->s[i]; if (ch < 33) ch = '?'; if (ch > 126) ch = '?';
 if (substdio_put(subfdoutsmall,&ch,1) == -1) _exit(0); } }
 
-void temp_noip() { out("Zinvalid ipaddr in control/outgoingip (#4.3.0)\n"); zerodie(); }
+void temp_noip() { out("Zinvalid ipaddr in control/outgoingips (#4.3.0)\n"); zerodie(); }
 void temp_nomem() { out("ZOut of memory. (#4.3.0)\n"); zerodie(); }
 void temp_oserr() { out("Z\
 System resources temporarily unavailable. (#4.3.0)\n"); zerodie(); }
@@ -855,7 +857,6 @@
 
 void getcontrols()
 {
-  int r;
   if (control_init() == -1) temp_control();
   if (control_readint(&timeout,"control/timeoutremote") == -1) temp_control();
   if (control_readint(&timeoutconnect,"control/timeoutconnect") == -1)
@@ -879,12 +880,14 @@
     case 1:
       if (!constmap_init(&mapauthsenders,authsenders.s,authsenders.len,1)) temp_nomem(); break;
   }
- r = control_readline(&outgoingip,"control/outgoingip");
- if (-1 == r) { if (errno == error_nomem) temp_nomem(); temp_control(); }
- if (0 == r && !stralloc_copys(&outgoingip, "0.0.0.0")) temp_nomem();
- if (str_equal(outgoingip.s, "0.0.0.0"))
-   { outip.d[0]=outip.d[1]=outip.d[2]=outip.d[3]=(unsigned long) 0; }
- else if (!ip_scan(outgoingip.s, &outip)) temp_noip();
+  switch(control_readfile(&outgoingips,"control/outgoingips",0)) {
+    case -1:
+      temp_control();
+    case 0:
+      if (!constmap_init(&mapoutgoingips,"",0,1)) temp_nomem(); break;
+    case 1:
+      if (!constmap_init(&mapoutgoingips,outgoingips.s,outgoingips.len,1)) temp_nomem(); break;
+  }
 }
 
 int main(argc,argv)
@@ -899,7 +902,8 @@
   int flagallaliases;
   int flagalias;
   char *relayhost;
-   
+  char *localip;
+
   sig_pipeignore();
   if (argc < 4) perm_usage();
   if (chdir(auto_qmail) == -1) temp_chdir();
@@ -972,6 +976,21 @@
     }
   }
 
+  if (!stralloc_copy(&outdomain,&canonhost)) temp_nomem();  /* is there a better way? */
+  localip = 0;
+  for (i = 0;i <= outdomain.len;++i)
+    if ((i == 0) || (i == outdomain.len) || (outdomain.s[i] == '.'))
+      if (localip = constmap(&mapoutgoingips,outdomain.s + i,outdomain.len - i))
+      break;
+  if (localip && !*localip) localip = 0;
+
+  if (localip) {
+    if (!ip_scan(localip,&outgoingip)) temp_noip();
+    if (!stralloc_copy(&helohost,&outdomain)) temp_nomem(); /* could be in control file */
+  }
+  else
+    outgoingip.d[0] = outgoingip.d[1] = outgoingip.d[2] = outgoingip.d[3] = (unsigned long) 0;
+
   if (!saa_readyplus(&reciplist,0)) temp_nomem();
   if (ipme_init() != 1) temp_oserr();
  
@@ -1020,7 +1039,7 @@
     smtpfd = socket(AF_INET,SOCK_STREAM,0);
     if (smtpfd == -1) temp_oserr();
  
-    if (timeoutconn(smtpfd,&ip.ix[i].ip,&outip,(unsigned int) port,timeoutconnect) == 0) {
+    if (timeoutconn(smtpfd,&ip.ix[i].ip,&outgoingip,(unsigned int) port,timeoutconnect) == 0) {
       tcpto_err(&ip.ix[i].ip,0);
       partner = ip.ix[i].ip;
 #ifdef TLS
diff -u netqmail-1.06/qmail-showctl.c netqmail-1.06-new/qmail-showctl.c
--- netqmail-1.06/qmail-showctl.c	2020-01-16 05:39:21.569000009 +1100
+++ qmail-showctl.c	2020-01-16 21:34:35.375001499 +1100
@@ -239,9 +239,9 @@
   do_str("localiphost",1,"localiphost","Local IP address becomes ");
   do_lst("locals","Messages for me are delivered locally.","Messages for "," are delivered locally.");
   do_str("me",0,"undefined! Uh-oh","My name is ");
+  do_lst("outgoingips","No outgoing ip mappings defined.","Map from sender domain part to local ip: ","");
   do_lst("moreipme","No additional IP addresses are me.","IP address "," is me.");
   do_lst("notipme","All of my IP addresses are me.","IP address "," is not me.");
-  do_str("outgoingip",0,"0.0.0.0","Outgoing IP address is ");
   do_lst("percenthack","The percent hack is not allowed.","The percent hack is allowed for user%host@",".");
   do_str("plusdomain",1,"plusdomain","Plus domain name is ");
   do_lst("qmqpservers","No QMQP servers.","QMQP server: ",".");
@@ -332,6 +332,7 @@
     if (str_equal(d->d_name,"timeoutremote")) continue;
     if (str_equal(d->d_name,"timeoutsmtpd")) continue;
     if (str_equal(d->d_name,"virtualdomains")) continue;
+    if (str_equal(d->d_name,"outgoingips")) continue;
     substdio_puts(subfdout,"\n");
     substdio_puts(subfdout,d->d_name);
     substdio_puts(subfdout,": I have no idea what this file does.\n");
diff -u netqmail-1.06/timeoutconn.c netqmail-1.06-new/timeoutconn.c
--- netqmail-1.06/timeoutconn.c	2020-01-16 05:39:21.619000009 +1100
+++ timeoutconn.c	2020-01-16 21:27:19.925000013 +1100
@@ -10,26 +10,20 @@
 #include "byte.h"
 #include "timeoutconn.h"
 
-int timeoutconn(s,ip,outip,port,timeout)
+int timeoutconn(s,ip,localip,port,timeout)
 int s;
 struct ip_address *ip;
-struct ip_address *outip;
+struct ip_address *localip;
 unsigned int port;
 int timeout;
 {
   char ch;
   struct sockaddr_in sin;
+  struct sockaddr_in sin_local;
   char *x;
   fd_set wfds;
   struct timeval tv;
  
-  /* bind() an outgoing ipaddr */
-  byte_zero(&sin,sizeof(sin));
-  byte_copy(&sin.sin_addr.s_addr,4,outip);
-  sin.sin_family = AF_INET;
-
-  if (-1 == bind(s,(struct sockaddr *) &sin,sizeof(sin))) return -1;
-
   byte_zero(&sin,sizeof(sin));
   byte_copy(&sin.sin_addr,4,ip);
   x = (char *) &sin.sin_port;
@@ -38,7 +32,11 @@
  
   if (ndelay_on(s) == -1) return -1;
  
-  /* XXX: could bind s */
+  byte_zero(&sin_local,sizeof(sin_local));
+  byte_copy(&sin_local.sin_addr,4,localip);
+  sin_local.sin_family = AF_INET;
+
+  if (bind(s,(struct sockaddr *) &sin_local,sizeof(sin_local)) == -1) return -1;
  
   if (connect(s,(struct sockaddr *) &sin,sizeof(sin)) == 0) {
     ndelay_off(s);
